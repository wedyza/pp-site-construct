services:
  minio:  
    image: minio/minio
    container_name: minio  
    restart: unless-stopped  
    ports:
      - 9001:9001
    volumes:  
      - minio-storage:/data  
      - minio-config:/root/.minio  
    environment:  
      - MINIO_ROOT_USER=miniouser  
      - MINIO_ROOT_PASSWORD=admin123
    command: server /data --console-address ":9001"  
    healthcheck:  
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]  
      interval: 30s  
      timeout: 20s  
      retries: 3
  
  db:
    image: postgres:13
    container_name: postgres_db
    restart: always
    env_file: ./.env
    ports:
      - '6500:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
  
  message_microservice:
    build: ./microservices/messages_service
    container_name: messages_service
    command: uvicorn app.main:app --reload --port 8080
    volumes:
      - message_volume:/messages.db
    network_mode: host
  
  notifications_microservice:
    build: ./microservices/notifications_service
    container_name: notifications_service
    command: uvicorn app.main:app --reload --port 8081
    volumes:
      - notification_volume:/notifications.db
    network_mode: host
  
  monolith_app:
    build: ./site_construct
    container_name: monolith_app
    network_mode: host

volumes:
  minio-storage:
  minio-config:
  pg_data:
  message_volume:
  notification_volume: