import { Good, toggleWishlist } from '../../store/goodsSlice';
import { useAppDispatch } from '../../store/hooks';
import { formatPrice } from '../../utils/formatPrice';
import './goodCard.scss'


interface GoodsCardProps {
    good: Good;
}

const GoodsCard: React.FC<GoodsCardProps> = ({ good }) => {
    const dispatch = useAppDispatch();

    const handleToggleWishlist = (e: React.MouseEvent ) => {
        e.stopPropagation();
        e.preventDefault();
        dispatch(toggleWishlist(good.id));
    };

    return (
        <div className='goods-card'>
            <button className='goods-card_fav' onClick={handleToggleWishlist}>
                {good.in_wishlist ? (
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fillRule="evenodd" clipRule="evenodd" d="M11.9999 3.94228C13.1757 2.85872 14.7069 2.25 16.3053 2.25C18.0313 2.25 19.679 2.95977 20.8854 4.21074C22.0832 5.45181 22.75 7.1248 22.75 8.86222C22.75 10.5997 22.0831 12.2728 20.8854 13.5137C20.089 14.3393 19.2938 15.1836 18.4945 16.0323C16.871 17.7562 15.2301 19.4985 13.5256 21.14L13.5216 21.1438C12.6426 21.9779 11.2505 21.9476 10.409 21.0754L3.11399 13.5136C0.62867 10.9374 0.62867 6.78707 3.11399 4.21085C5.54605 1.68984 9.46239 1.60032 11.9999 3.94228Z" fill="black"/>
                    </svg>
                ) : (
                    <svg width="22" height="20" viewBox="0 0 22 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fillRule="evenodd" clipRule="evenodd" d="M15.3053 1.75C13.9937 1.75 12.7335 2.28909 11.8047 3.25232L11.5395 3.52714C11.3982 3.67365 11.2034 3.75641 10.9998 3.75642C10.7962 3.75642 10.6013 3.67365 10.46 3.52714L10.1949 3.25229C8.26309 1.24988 5.12529 1.24988 3.19352 3.2523C1.26883 5.24739 1.26883 8.47705 3.19352 10.4721L10.4886 18.034C10.7573 18.3126 11.2054 18.3232 11.4874 18.0573C13.1657 16.4409 14.7608 14.747 16.368 13.0402C17.1737 12.1847 17.9823 11.3259 18.806 10.4721C19.7292 9.5156 20.25 8.21777 20.25 6.86222C20.25 5.50674 19.7294 4.20909 18.8061 3.2524C17.8773 2.28925 16.617 1.75 15.3053 1.75ZM10.9999 1.94228C12.1757 0.85872 13.7069 0.25 15.3053 0.25C17.0313 0.25 18.679 0.959767 19.8854 2.21074C21.0832 3.45181 21.75 5.1248 21.75 6.86222C21.75 8.5997 21.0831 10.2728 19.8854 11.5137C19.089 12.3393 18.2938 13.1836 17.4945 14.0323C15.871 15.7562 14.2301 17.4985 12.5256 19.14L12.5216 19.1438C11.6426 19.9779 10.2505 19.9476 9.40903 19.0754L2.11399 11.5136C-0.37133 8.93736 -0.37133 4.78707 2.11399 2.21085C4.54605 -0.310155 8.46239 -0.399677 10.9999 1.94228Z" fill="black"/>
                    </svg>
                )}
            </button>
            <div className="good-card_img">
                {good.media && good.media?.length > 0 && (
                    <img src={good.media[0].source} alt="" />
                )}
            </div>
            <div className="goods-card_info">
                <span className="goods-card_price">{good.price && formatPrice(good.price)} ₽</span>
                <span className="goods-card_name text-n14">{good.name}</span>
                <div className="goods-card_rating">
                    <div className="goods-card_rating__stars text-n14">
                        <svg width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M5.72493 5.99067L7.4566 2.50253C7.67891 2.05474 8.32111 2.05474 8.54342 2.50253L10.2751 5.99067L14.1477 6.55347C14.6445 6.62568 14.8426 7.23294 14.4828 7.5813L11.6812 10.2945L12.3424 14.1276C12.4273 14.6199 11.9076 14.9952 11.463 14.7628L8.00001 12.952L4.53699 14.7628C4.09241 14.9952 3.57274 14.6199 3.65765 14.1276L4.31885 10.2945L1.51718 7.5813C1.15746 7.23294 1.35549 6.62568 1.85236 6.55347L5.72493 5.99067Z" fill="black"/>
                            <path fillRule="evenodd" clipRule="evenodd" d="M7.94286 2.68137C7.92982 2.68906 7.91613 2.70131 7.90444 2.72486L6.17277 6.213C6.09977 6.36003 5.95927 6.46186 5.79683 6.48547L1.92426 7.04827C1.83419 7.06136 1.80646 7.16543 1.86501 7.22212L4.66668 9.93535C4.78543 10.0504 4.83966 10.2166 4.81156 10.3795L4.15036 14.2126C4.14595 14.2382 4.14979 14.2553 4.15538 14.2682C4.16182 14.2831 4.17376 14.2988 4.19151 14.3116C4.20927 14.3245 4.22867 14.3313 4.24625 14.333C4.2618 14.3344 4.28097 14.3324 4.3053 14.3197L7.76832 12.5089C7.91345 12.433 8.08655 12.433 8.23168 12.5089L11.6947 14.3197C11.719 14.3324 11.7382 14.3344 11.7538 14.333C11.7713 14.3313 11.7907 14.3245 11.8085 14.3116C11.8262 14.2988 11.8382 14.2831 11.8446 14.2682C11.8502 14.2553 11.8541 14.2382 11.8496 14.2126L11.1884 10.3795C11.1603 10.2166 11.2146 10.0504 11.3333 9.93535L14.135 7.22212C14.1935 7.16543 14.1658 7.06136 14.0757 7.04827L10.2032 6.48547C10.0407 6.46186 9.90023 6.36003 9.82724 6.213L8.09556 2.72486C8.08387 2.70131 8.07018 2.68906 8.05714 2.68137C8.04229 2.67261 8.02249 2.66669 8 2.66669C7.97752 2.66669 7.95771 2.67261 7.94286 2.68137ZM7.00875 2.28019C7.41485 1.46218 8.58516 1.46218 8.99125 2.28019L10.6064 5.53356L14.2196 6.05866C15.1232 6.18999 15.4916 7.30045 14.8307 7.94048L12.2188 10.4699L12.8351 14.0426C12.9915 14.9495 12.0371 15.6271 11.2313 15.2059L8 13.5162L4.76866 15.2059C3.96295 15.6271 3.00849 14.9495 3.16492 14.0426L3.7812 10.4699L1.16933 7.94048C0.508437 7.30045 0.876778 6.18999 1.78044 6.05866L5.39362 5.53356L7.00875 2.28019Z" fill="black"/>
                        </svg>
                        <span>{good.rate && good.rate.rate__avg ? good.rate.rate__avg : '0.0'}</span>
                    </div>
                    <span className='goods-card_rating__count text-n14'>{good.rate?.rate__count} оценок</span>
                </div>
            </div>
        </div>
    );
};

export default GoodsCard;